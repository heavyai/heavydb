name: Reusable build action
on:
  workflow_call:
    inputs:
      cuda_compiler_version:
        type: string
        default: None

    outputs:
      cache-suffix:
        value: ${{ jobs.build.outputs.cache-suffix }}

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      cuda_compiler_version: ${{ inputs.cuda_compiler_version }}
      PREFIX: distr
      CONDA_ENV: omnisci-dev

    outputs:
      cache-suffix: ${{ env.DATE }}

    steps:
      - uses: actions/checkout@v2

      - name: Set env context
        run: |
          echo CONDA_PATH=$CONDA >>$GITHUB_ENV
          echo RUN_STAMP=${{ runner.os }}-${{ (env.cuda_compiler_version != 'None') && format('cuda{0}', env.cuda_compiler_version) || 'CPU' }} >>$GITHUB_ENV
          echo CONDA_ENV_PATH=$CONDA/envs/${{ env.CONDA_ENV }} >>$GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Restore Conda env cache
        id: conda-conda
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CONDA_ENV_PATH }}
          key: ${{ env.RUN_STAMP }}-conda-${{ hashFiles('scripts/mapd-deps-conda-dev-env.yml') }}-${{ env.DATE }}
          restore-keys: |
            ${{ env.RUN_STAMP }}-conda-${{ hashFiles('scripts/mapd-deps-conda-dev-env.yml') }}-

      - name: Update Conda env
        if: steps.conda-cache.cache-hit != 'true'
        run: |
          conda update conda
          conda env update -f scripts/mapd-deps-conda-dev-env.yml

      - name: Install cudatoolkit-dev
        if: env.cuda_compiler_version != 'None'
        run: |
          conda install -n ${{ env.CONDA_ENV }} -c conda-forge cudatoolkit-dev arrow-cpp-proc=3.0.0=cuda

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
          key: ${{ env.RUN_STAMP }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ env.RUN_STAMP }}-maven-

      - name: Build
        env:
          CPU_COUNT: 4
          RUN_TESTS: 1
        run: |
          mkdir -p ${{ env.PREFIX }}
          rm -rf build
          conda info
          conda list -n ${{ env.CONDA_ENV }}
          $CONDA/bin/conda run -n ${{ env.CONDA_ENV }} bash scripts/conda/build-install-all.sh
          tar -zcf /tmp/build.tgz .

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUN_STAMP }}-packages
          path: ${{ env.PREFIX }}

      - name: Upload build and src files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUN_STAMP }}-build
          path: /tmp/build.tgz

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUN_STAMP }}-logs
          path: |
            build/*.log
            build/CMakeCache.txt 
            build/CMakeFiles/*.log

