pkgname='onedal'
pkgver=2023.1.1
pkgrel=1
pkgdesc="oneAPI Data Analytics Library (oneDAL)"
arch=('x86_64')
url="https://www.intel.com/content/www/us/en/developer/tools/oneapi/onedal.html"
license=('Apache')
depends=('java-runtime-common' 'tbb')
checkdepends=('git')
optdepends=()
makedepends=('cmake')
options=('staticlibs')
source=("https://github.com/oneapi-src/oneDAL/archive/refs/tags/$pkgver.tar.gz")
sha256sums=('38e4e6513a17382f994fb5934b3f1b4f4b291c4663e2e904c6871681ed44da48')

prepare() {
  cd "$srcdir/oneDAL-$pkgver"
  ./dev/download_micromkl.sh

  # Remove #include of some headers marked as DAAL_DEPRECATED
  #sed -i '/^#include ".*\/bzip2compression\.h"$/d' cpp/daal/include/daal.h
  #sed -i '/^#include ".*\/zlibcompression\.h"$/d' cpp/daal/include/daal.h
}

build() {
  cd "$srcdir/oneDAL-$pkgver"

  # building oneAPI triggers deprecated implicit copy constructor warnings, which fail the build
  # due to -Werror, so add a -Wno-error=deprecated-copy flag to compilation command
  sed -ie "/-Wreturn-type/s/$/ -Wno-error=deprecated-copy -Wno-error=dangling-reference/" dev/make/cmplr.gnu.mk

  # Add -Wno-error=dangling-reference due to:
  # ./cpp/oneapi/dal/algo/svm/detail/kernel_function.hpp:146:17: error: possibly dangling reference to a temporary [-Werror=dangling-reference]
  #   146 |     const auto& kernel = kernel_function_accessor{}.get_kernel_impl(std::forward<Descriptor>(desc));
  #       |                 ^~~~~~
  # ./cpp/oneapi/dal/algo/svm/detail/kernel_function.hpp:146:68: note: the temporary was destroyed at the end of the full expression ‘oneapi::dal::svm::detail::v1::kernel_function_accessor().oneapi::dal::svm::detail::v1::kernel_function_accessor::get_kernel_impl<const oneapi::dal::svm::detail::v1::descriptor_base<oneapi::dal::svm::task::v1::nu_regression>&>((* & std::forward<const oneapi::dal::svm::detail::v1::descriptor_base<oneapi::dal::svm::task::v1::nu_regression>&>((* & desc))))’

  JAVA_HOME=/usr/lib/jvm/default \
  CPATH=$JAVA_HOME/include:$JAVA_HOME/include/linux \
  LIBRARY_PATH=/usr/lib \
  LD_LIBRARY_PATH=/usr/lib \
  TBBROOT=/usr \
    make -f makefile daal_c oneapi_c PLAT=lnx32e REQCPU="avx2 avx512" COMPILER=gnu -j
}

package() {
  cd "$srcdir/oneDAL-$pkgver"

  mkdir $pkgdir/usr
  mv __release_lnx_gnu/daal/latest/include $pkgdir/usr/include
  mv __release_lnx_gnu/daal/latest/lib/intel64 $pkgdir/usr/lib
  mv __release_lnx_gnu/daal/latest/lib/cmake $pkgdir/usr/lib/cmake
  # __release_lnx_gnu/tbb/latest/lib/intel64 is also available but we use the arch onetbb package instead.
}

# vim:ts=2:sw=2:et:
